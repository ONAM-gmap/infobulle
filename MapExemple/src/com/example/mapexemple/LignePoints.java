package com.example.mapexemple;

import java.util.ArrayList;
import java.util.List;

import com.google.android.gms.maps.model.LatLng;

public class LignePoints {
	private List<LatLng> Points;

	public LignePoints() {
		Points = new ArrayList<LatLng>();
		Init();
	}

	public void Init() {
		Points.add(new LatLng(33.586899, -7.501611));
		Points.add(new LatLng(33.586209, -7.502681));
		Points.add(new LatLng(33.585561, -7.503705));
		Points.add(new LatLng(33.584703, -7.505052));
		Points.add(new LatLng(33.58399, -7.506146));
		Points.add(new LatLng(33.583326, -7.507133));
		Points.add(new LatLng(33.582712, -7.507981));
		Points.add(new LatLng(33.582278, -7.508735));
		Points.add(new LatLng(33.581505, -7.510035));
		Points.add(new LatLng(33.58075, -7.511248));
		Points.add(new LatLng(33.580142, -7.512168));
		Points.add(new LatLng(33.579302, -7.513482));
		Points.add(new LatLng(33.578395, -7.514914));
		Points.add(new LatLng(33.577418, -7.516449));
		Points.add(new LatLng(33.576558, -7.517787));
		Points.add(new LatLng(33.575791, -7.519026));
		Points.add(new LatLng(33.575499, -7.519681));
		Points.add(new LatLng(33.574857, -7.521826));
		Points.add(new LatLng(33.574097, -7.524423));
		Points.add(new LatLng(33.573798, -7.525429));
		Points.add(new LatLng(33.573769, -7.525657));
		Points.add(new LatLng(33.573702, -7.527647));
		Points.add(new LatLng(33.572998, -7.530367));
		Points.add(new LatLng(33.57275, -7.530734));
		Points.add(new LatLng(33.57268, -7.530798));
		Points.add(new LatLng(33.572634, -7.530871));
		Points.add(new LatLng(33.572575, -7.531161));
		Points.add(new LatLng(33.572593, -7.531324));
		Points.add(new LatLng(33.572933, -7.532582));
		Points.add(new LatLng(33.57346, -7.534602));
		Points.add(new LatLng(33.573983, -7.536603));
		Points.add(new LatLng(33.574728, -7.53939));
		Points.add(new LatLng(33.574924, -7.540122));
		Points.add(new LatLng(33.575445, -7.542568));
		Points.add(new LatLng(33.576097, -7.54576));
		Points.add(new LatLng(33.57652, -7.547916));
		Points.add(new LatLng(33.577137, -7.550376));
		Points.add(new LatLng(33.578526, -7.555322));
		Points.add(new LatLng(33.57921, -7.557693));
		Points.add(new LatLng(33.580629, -7.562754));
		Points.add(new LatLng(33.582095, -7.566922));
		Points.add(new LatLng(33.582218, -7.567121));
		Points.add(new LatLng(33.58231, -7.567164));
		Points.add(new LatLng(33.582406, -7.567164));
		Points.add(new LatLng(33.583648, -7.566381));
		Points.add(new LatLng(33.583791, -7.566295));
		Points.add(new LatLng(33.584006, -7.566295));
		Points.add(new LatLng(33.585532, -7.566791));
		Points.add(new LatLng(33.587085, -7.567303));
		Points.add(new LatLng(33.589053, -7.56795));
		Points.add(new LatLng(33.59156, -7.568754));
		Points.add(new LatLng(33.591629, -7.568819));
		Points.add(new LatLng(33.591661, -7.56887));
		Points.add(new LatLng(33.591674, -7.568993));
		Points.add(new LatLng(33.591504, -7.569749));
		Points.add(new LatLng(33.591066, -7.571627));
		Points.add(new LatLng(33.590783, -7.572332));
		Points.add(new LatLng(33.590499, -7.573615));
		Points.add(new LatLng(33.590257, -7.574682));
		Points.add(new LatLng(33.590269, -7.575141));
		Points.add(new LatLng(33.590751, -7.577649));
		Points.add(new LatLng(33.590981, -7.578646));
		Points.add(new LatLng(33.59129, -7.579934));
		Points.add(new LatLng(33.591386, -7.580164));
		Points.add(new LatLng(33.592501, -7.58139));
		Points.add(new LatLng(33.59362, -7.58279));
		Points.add(new LatLng(33.595338, -7.585776));
		Points.add(new LatLng(33.595352, -7.585875));
		Points.add(new LatLng(33.595336, -7.585947));
		Points.add(new LatLng(33.594668, -7.586666));
		Points.add(new LatLng(33.593175, -7.588187));
		Points.add(new LatLng(33.590338, -7.591196));
		Points.add(new LatLng(33.590284, -7.591272));
		Points.add(new LatLng(33.590251, -7.59136));
		Points.add(new LatLng(33.590231, -7.591481));
		Points.add(new LatLng(33.590246, -7.59162));
		Points.add(new LatLng(33.590561, -7.592251));
		Points.add(new LatLng(33.591629, -7.594337));
		Points.add(new LatLng(33.592452, -7.595955));
		Points.add(new LatLng(33.592994, -7.597017));
		Points.add(new LatLng(33.593216, -7.597438));
		Points.add(new LatLng(33.593274, -7.597663));
		Points.add(new LatLng(33.593285, -7.59784));
		Points.add(new LatLng(33.593285, -7.598527));
		Points.add(new LatLng(33.593359, -7.600378));
		Points.add(new LatLng(33.593455, -7.603079));
		Points.add(new LatLng(33.593575, -7.605804));
		Points.add(new LatLng(33.593671, -7.60836));
		Points.add(new LatLng(33.59368, -7.608499));
		Points.add(new LatLng(33.593768, -7.608953));
		Points.add(new LatLng(33.59425, -7.611026));
		Points.add(new LatLng(33.594518, -7.612305));
		Points.add(new LatLng(33.59507, -7.614859));
		Points.add(new LatLng(33.595515, -7.617074));
		Points.add(new LatLng(33.595591, -7.617243));
		Points.add(new LatLng(33.595769, -7.617512));
		Points.add(new LatLng(33.59576, -7.617592));
		Points.add(new LatLng(33.595689, -7.617764));
		Points.add(new LatLng(33.595557, -7.617876));
		Points.add(new LatLng(33.595309, -7.617973));
		Points.add(new LatLng(33.593571, -7.618504));
		Points.add(new LatLng(33.592474, -7.618721));
		Points.add(new LatLng(33.591645, -7.619));
		Points.add(new LatLng(33.589511, -7.620025));
		Points.add(new LatLng(33.587849, -7.620961));
		Points.add(new LatLng(33.58635, -7.621825));
		Points.add(new LatLng(33.583889, -7.623128));
		Points.add(new LatLng(33.582254, -7.623965));
		Points.add(new LatLng(33.58102, -7.624464));
		Points.add(new LatLng(33.579943, -7.624869));
		Points.add(new LatLng(33.578533, -7.62536));
		Points.add(new LatLng(33.577452, -7.625703));
		Points.add(new LatLng(33.575901, -7.625733));
		Points.add(new LatLng(33.574821, -7.625802));
		Points.add(new LatLng(33.57338, -7.625867));
		Points.add(new LatLng(33.57169, -7.625931));
		Points.add(new LatLng(33.570812, -7.625969));
		Points.add(new LatLng(33.569666, -7.62602));
		Points.add(new LatLng(33.569596, -7.62613));
		Points.add(new LatLng(33.569541, -7.626325));
		Points.add(new LatLng(33.569532, -7.626636));
		Points.add(new LatLng(33.569706, -7.630075));
		Points.add(new LatLng(33.570061, -7.631722));
		Points.add(new LatLng(33.570607, -7.634222));
		Points.add(new LatLng(33.570881, -7.635541));
		Points.add(new LatLng(33.57094, -7.636292));
		Points.add(new LatLng(33.570995, -7.637097));
		Points.add(new LatLng(33.570969, -7.63729));
		Points.add(new LatLng(33.569748, -7.639651));
		Points.add(new LatLng(33.569447, -7.640275));
		Points.add(new LatLng(33.569355, -7.6406));
		Points.add(new LatLng(33.56931, -7.643929));
		Points.add(new LatLng(33.569288, -7.644071));
		Points.add(new LatLng(33.569179, -7.644288));
		Points.add(new LatLng(33.568973, -7.644538));
		Points.add(new LatLng(33.568537, -7.644859));
		Points.add(new LatLng(33.567261, -7.645857));
		Points.add(new LatLng(33.565752, -7.646925));
		Points.add(new LatLng(33.564512, -7.64781));
		Points.add(new LatLng(33.563182, -7.648679));
		Points.add(new LatLng(33.561843, -7.64961));
		Points.add(new LatLng(33.561016, -7.650143));
		Points.add(new LatLng(33.560958, -7.650194));
		Points.add(new LatLng(33.560931, -7.650256));
		Points.add(new LatLng(33.560914, -7.650344));
		Points.add(new LatLng(33.560916, -7.650484));
		Points.add(new LatLng(33.561756, -7.652329));
		Points.add(new LatLng(33.561772, -7.652412));
		Points.add(new LatLng(33.561761, -7.652498));
		Points.add(new LatLng(33.561718, -7.6526));
		Points.add(new LatLng(33.561658, -7.652675));
		Points.add(new LatLng(33.561365, -7.652936));
		Points.add(new LatLng(33.560002, -7.654033));
		Points.add(new LatLng(33.558822, -7.654993));
		Points.add(new LatLng(33.558674, -7.655167));
		Points.add(new LatLng(33.55864, -7.655242));
		Points.add(new LatLng(33.558627, -7.655355));
		Points.add(new LatLng(33.558634, -7.655484));
		Points.add(new LatLng(33.55875, -7.655773));
		Points.add(new LatLng(33.559789, -7.657533));
		Points.add(new LatLng(33.560699, -7.659102));
		Points.add(new LatLng(33.561012, -7.659762));
		Points.add(new LatLng(33.561354, -7.660912));
		Points.add(new LatLng(33.561414, -7.661022));
		Points.add(new LatLng(33.561486, -7.6611));
		Points.add(new LatLng(33.561602, -7.661146));
		Points.add(new LatLng(33.56181, -7.661114));
		Points.add(new LatLng(33.562165, -7.660958));
		Points.add(new LatLng(33.563524, -7.660376));
		Points.add(new LatLng(33.565055, -7.659673));
		Points.add(new LatLng(33.565292, -7.659617));
		Points.add(new LatLng(33.565375, -7.659641));
		Points.add(new LatLng(33.56552, -7.659735));
		Points.add(new LatLng(33.565786, -7.660151));
		Points.add(new LatLng(33.566836, -7.66191));
		Points.add(new LatLng(33.568182, -7.664225));
		Points.add(new LatLng(33.569362, -7.666207));
		Points.add(new LatLng(33.570334, -7.66813));
		Points.add(new LatLng(33.57073, -7.66861));
		Points.add(new LatLng(33.57193, -7.669402));
		Points.add(new LatLng(33.573257, -7.67026));
		Points.add(new LatLng(33.573454, -7.670501));
		Points.add(new LatLng(33.573776, -7.670998));
		Points.add(new LatLng(33.574374, -7.671478));
		Points.add(new LatLng(33.576681, -7.673055));
		Points.add(new LatLng(33.577132, -7.673422));
		Points.add(new LatLng(33.578064, -7.673921));
		Points.add(new LatLng(33.579957, -7.674637));
		Points.add(new LatLng(33.58094, -7.674836));
		Points.add(new LatLng(33.581983, -7.675005));
		Points.add(new LatLng(33.582225, -7.675168));
		Points.add(new LatLng(33.582437, -7.67537));
		Points.add(new LatLng(33.583279, -7.67722));
		Points.add(new LatLng(33.58351, -7.677488));
		Points.add(new LatLng(33.583751, -7.677644));
		Points.add(new LatLng(33.585145, -7.678478));
		Points.add(new LatLng(33.585659, -7.678838));
		Points.add(new LatLng(33.586649, -7.679935));
		Points.add(new LatLng(33.587478, -7.680855));
	}

	public List<LatLng> Liste() {
		return Points;
	}
}
